
echo $hgh_n "checking for $hgh_feature ...$hgh_c"

cat << END >> $HGH_AUTOCONF_ERR

---------------------------------------
checking for $hgh_feature

END

hgh_found=no

if test -n "$hgh_feature_name"; then
    hgh_have_feature=`echo $hgh_feature_name \
                     | tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJLMNOPQRSTUVWXYZ`
fi

if test -n "$hgh_feature_path"; then
    for hgh_temp in $hgh_feature_path; do
        hgh_feature_inc_path="$hgh_feature_inc_path -I $hgh_temp"
    done
fi

cat << END > $HGH_AUTOTEST.c

#include <sys/types.h>
$HGH_INCLUDE_UNISTD_H
$hgh_feature_incs

int main(void) {
    $hgh_feature_test;
    return 0;
}

END

hgh_test="$CC $CC_TEST_FLAGS $CC_AUX_FLAGS $hgh_feature_inc_path \
          -o $HGH_AUTOTEST $HGH_AUTOTEST.c $HGH_TEST_LD_OPT $hgh_feature_libs"

hgh_feature_inc_path=

eval "/bin/sh -c \"$hgh_test\" >> $HGH_AUTOCONF_ERR 2>&1"

if [ -x $HGH_AUTOTEST ]; then

    case "$hgh_feature_run" in

        yes)
            # /bin/sh is used to intercept "Killed" or "Abort trap" messages
            if /bin/sh -c $HGH_AUTOTEST >> $HGH_AUTOCONF_ERR 2>&1; then
                echo " found"
                hgh_found=yes

                if test -n "$hgh_feature_name"; then
                    have=$hgh_have_feature . auto/have
                fi

            else
                echo " found but is not working"
            fi
        ;;

        value)
            # /bin/sh is used to intercept "Killed" or "Abort trap" messages
            if /bin/sh -c $HGH_AUTOTEST >> $HGH_AUTOCONF_ERR 2>&1; then
                echo " found"
                hgh_found=yes

                cat << END >> $HGH_AUTO_CONFIG_H

#ifndef $hgh_feature_name
#define $hgh_feature_name   `$HGH_AUTOTEST`
#endif

END
            else
                echo " found but is not working" 
            fi
        ;;

        bug)
            # /bin/sh is used to intercept "Killed" or "Abort trap" message
            if /bin/sh -c $HGH_AUTOTEST >> $HGH_AUTOCONF_ERR 2>&1; then
                echo " not found"

            else
                echo " found"
                hgh_found=yes
                
                if test -n "$hgh_feature_name"; then
                    have=$hgh_have_feature . auto/have
                fi
            fi
        ;;

        *)
            echo " found"
            hgh_found=yes

            if test -n "$hgh_feature_name"; then
                have=$hgh_have_feature . auto/have
            fi
        ;;

    esac

else
    echo " not found"

    echo "-----------"      >> $HGH_AUTOCONF_ERR
    cat $HGH_AUTOTEST.c     >> $HGH_AUTOCONF_ERR
    echo "-----------"      >> $HGH_AUTOCONF_ERR
    echo $hgh_test          >> $HGH_AUTOCONF_ERR
    echo "-----------"      >> $HGH_AUTOCONF_ERR
fi

rm -rf $HGH_AUTOTEST*
